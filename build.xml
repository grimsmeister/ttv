<?xml version="1.0" encoding="UTF-8"?>
<!--
 * Copyright 2013 Skynav, Inc. All rights reserved.
 * 
 * Redistribution and use in source and binary forms, with or without
 * modification, are permitted provided that the following conditions are met:
 *
 * 1. Redistributions of source code must retain the above copyright notice,
 * this list of conditions and the following disclaimer.
 *
 * 2. Redistributions in binary form must reproduce the above copyright notice,
 * this list of conditions and the following disclaimer in the documentation
 * and/or other materials provided with the distribution.
 *
 * THIS SOFTWARE IS PROVIDED BY SKYNAV, INC. AND ITS CONTRIBUTORS “AS IS” AND ANY
 * EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED
 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE
 * DISCLAIMED. IN NO EVENT SHALL SKYNAV, INC. OR ITS CONTRIBUTORS BE LIABLE FOR
 * ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL
 * DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR
 * SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER
 * CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY,
 * OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE
 * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
-->
<project name="ttv" basedir="." default="clean-test">

<property name="build.dir" value="${basedir}/bld"/>
<property name="classes.dir" value="${build.dir}/classes"/>
<property name="artifacts.dir" value="${build.dir}/artifacts"/>
<property name="source.dir" value="${basedir}/src"/>
<property name="bindings.dir" value="${source.dir}/bindings"/>
<property name="generated.dir" value="${source.dir}/generated"/>
<property name="java.source.dir" value="${source.dir}/java"/>
<property name="schemas.dir" value="${source.dir}/schemas"/>
<property name="test.dir" value="${basedir}/tst"/>
<property name="test.java.source.dir" value="${test.dir}/java"/>
<property name="test.resources.source.dir" value="${test.dir}/resources"/>
<property name="test.classes.dir" value="${build.dir}/test-classes"/>
<property name="test.resources.dir" value="${build.dir}/test-resources"/>
<property name="release.dir" value="${basedir}/dst"/>

<property name="ttv.jar" value="ttv.jar"/>
<property name="ttv.source.jar" value="ttv-source.jar"/>
<property name="ttv.main.class" value="com/skynav/ttv/app/TimedTextVerifier"/>
<property name="ttv.target" value="${artifacts.dir}/${ttv.jar}"/>
<property name="ttv.source.target" value="${artifacts.dir}/${ttv.source.jar}"/>
<property name="ttv.title" value="Timed Text Verifier"/>
<property name="ttv.version.major" value="1"/>
<property name="ttv.version.minor" value="0"/>
<property name="ttv.version.micro" value="0"/>
<property name="ttv.version.suffix" value="dev"/>
<property name="ttv.version" value="${ttv.version.major}.${ttv.version.minor}.${ttv.version.micro}${ttv.version.suffix}"/>
<property name="ttv.vendor" value="Skynav, Inc."/>
<property name="ttv.release.target" value="${release.dir}/ttv-bin-${ttv.version}.jar"/>

<property name="javac.debug" value="true"/>
<property name="javac.deprecation" value="true"/>
<property name="javac.fork" value="false"/>
<property name="javac.optimize" value="false"/>
<property name="javac.source" value="1.6"/>
<property name="javac.target" value="1.6"/>

<presetdef name="javac">
  <javac
    debug="${javac.debug}"
    deprecation="${javac.deprecation}"
    fork="${javac.fork}"
    includeantruntime="true"
    optimize="${javac.optimize}"
    source="${javac.source}"
    target="${javac.target}"
  />
</presetdef>

<property name="junit.errorproperty" value="junit.error"/>
<property name="junit.failureproperty" value="junit.failure"/>
<property name="junit.fork" value="true"/>
<property name="junit.forkmode" value="once"/>
<property name="junit.formatter.brief" value="false"/>
<property name="junit.haltonfailure" value="true"/>
<property name="junit.output.dir" value="${build.dir}/test-output"/>
<property name="junit.printsummary" value="true"/>

<path id="default-junit-classpath">
  <pathelement location="${ttv.target}"/>
  <pathelement location="${test.classes.dir}"/>
  <pathelement location="${test.resources.dir}"/>
</path>

<macrodef name="junit-run">
  <attribute name="testsuite"/>
  <attribute name="outfile"/>
  <attribute name="classpath" default="default-junit-classpath"/>
  <sequential>
    <condition property="junit.formatter.brief.use">
      <istrue value="${junit.formatter.brief}"/>
    </condition>
    <mkdir dir="${junit.output.dir}"/>
    <junit
      errorproperty="${junit.errorproperty}"
      failureproperty="${junit.failureproperty}"
      fork="${junit.fork}"
      forkmode="${junit.forkmode}"
      haltonfailure="${junit.haltonfailure}"
      includeantruntime="true"
      printsummary="${junit.printsummary}">
      <jvmarg value="-ea"/>
      <sysproperty key="java.awt.headless" value="true"/>
      <formatter type="brief" usefile="false" if="junit.formatter.brief.use"/>
      <formatter type="plain" usefile="true"/>
      <formatter type="xml" usefile="true"/>
      <classpath>
        <path refid="@{classpath}"/>
      </classpath>
      <assertions>
        <enable/>
      </assertions>
      <test name="@{testsuite}" todir="${junit.output.dir}" outfile="@{outfile}"/>
    </junit>
  </sequential>
</macrodef>

<!-- WARNING - THIS TARGET OVERWRITES EXISTING BINDING SOURCES!! -->
<target name="create-xsd-bindings-ttml10">
  <exec executable="xjc" dir="${build.dir}">
    <arg value="-b"/>
    <arg value="${bindings.dir}/xsd/ttml10-bindings.xjb"/>
    <arg value="-d"/>
    <arg value="${generated.dir}"/>
    <arg value="${schemas.dir}/xsd/ttml10/ttaf1-dfxp.xsd"/>
  </exec>
</target>

<!-- WARNING - THIS TARGET OVERWRITES EXISTING BINDING SOURCES!! -->
<target name="create-xsd-bindings" depends="create-xsd-bindings-ttml10"/>

<!-- WARNING - THIS TARGET OVERWRITES EXISTING BINDING SOURCES!! -->
<target name="generate-code" depends="create-xsd-bindings"/>

<target name="compile">
  <mkdir dir="${classes.dir}"/>
  <javac destdir="${classes.dir}">
    <src path="${java.source.dir}"/>
    <src path="${generated.dir}"/>
  </javac>
</target>

<target name="compile-tests" depends="compile">
  <mkdir dir="${test.classes.dir}"/>
  <javac destdir="${test.classes.dir}">
    <src path="${test.java.source.dir}"/>
    <classpath>
      <path location="${classes.dir}"/>
    </classpath>
  </javac>
  <mkdir dir="${test.resources.dir}"/>
  <copy todir="${test.resources.dir}">
    <fileset dir="${test.resources.source.dir}"/>
  </copy>
</target>

<target name="ensure-artifacts-directory">
  <mkdir dir="${artifacts.dir}"/>
</target>

<target name="build-jars" depends="compile">
  <tstamp>
    <format property="ts" pattern="yyyyMMdd-HHmmss-z"/>
  </tstamp>
  <property name="build.id" value="${ts} (${user.name} [${os.name} ${os.version} ${os.arch}, Java ${java.runtime.version}, Target Java ${javac.target}])"/>
  <jar jarfile="${ttv.target}">
    <fileset dir="${classes.dir}"/>
    <fileset dir="${schemas.dir}"/>
    <manifest>
      <attribute name="Implementation-Title" value="${ttv.title}"/>
      <attribute name="Implementation-Version" value="${ttv.version}"/>
      <attribute name="Implementation-Vendor" value="${ttv.vendor}"/>
      <attribute name="Build-Id" value="${build.id}"/>
      <attribute name="Main-Class" value="${ttv.main.class}"/>
    </manifest>
  </jar>
  <jar jarfile="${ttv.source.target}">
    <fileset dir="${basedir}">
      <include name="build.xml"/>
      <include name="README.md"/>
      <include name="src/**/*.*"/>
      <include name="tst/**/*.*"/>
    </fileset>
    <manifest>
      <attribute name="Implementation-Title" value="${ttv.title} Source"/>
      <attribute name="Implementation-Version" value="${ttv.version}"/>
      <attribute name="Implementation-Vendor" value="${ttv.vendor}"/>
      <attribute name="Build-Id" value="${build.id}"/>
    </manifest>
  </jar>
</target>

<target name="build-artifacts" depends="ensure-artifacts-directory, build-jars"/>

<target name="build" description="Build TTV" depends="build-artifacts"/>

<target name="test-xml" description="Run XML tests">
  <junit-run testsuite="com.skynav.xml.helpers.HelpersTestSuite" outfile="TEST-xml-helpers"/>
</target>

<target name="test-ttml10" description="Run TTML10 tests">
  <junit-run testsuite="com.skynav.ttv.ttml10.SchemaTestSuite" outfile="TEST-ttml10-schema"/>
  <junit-run testsuite="com.skynav.ttv.ttml10.ModelTestSuite" outfile="TEST-ttml10-model"/>
  <junit-run testsuite="com.skynav.ttv.ttml10.UnmarshalTestSuite" outfile="TEST-ttml10-unmarshal"/>
</target>

<target name="test-verifier" description="Run TTV verification test suite">
  <junit-run testsuite="com.skynav.ttv.app.VerifierTestSuite" outfile="TEST-apps-verifier"/>
</target>

<target name="test-apps" description="Run TTV application tests" depends="test-verifier"/>

<target name="test" description="Run all TTV test suites" depends="compile-tests, test-xml, test-ttml10, test-apps"/>

<target name="release-dist">
  <copy file="${ttv.target}" tofile="${release.dir}/ttv-bin-${ttv.version}.jar"/>
  <copy file="${ttv.source.target}" tofile="${release.dir}/ttv-src-${ttv.version}.jar"/>
</target>

<target name="release-sign">
  <input message="Passphrase for your default private key (attention: passphrase will be echoed in clear text on the display!)" addproperty="pwd"/>
  <antcall target="sha">
    <param name="sign.archive" value="${release.dir}/ttv-bin-${ttv.version}.jar"/>
  </antcall>
  <antcall target="sign-file">
    <param name="sign.archive" value="${release.dir}/ttv-bin-${ttv.version}.jar"/>
    <param name="pwd" value="${pwd}"/>
  </antcall>
  <antcall target="sha">
    <param name="sign.archive" value="${release.dir}/ttv-src-${ttv.version}.jar"/>
  </antcall>
  <antcall target="sign-file">
    <param name="sign.archive" value="${release.dir}/ttv-src-${ttv.version}.jar"/>
    <param name="pwd" value="${pwd}"/>
  </antcall>
</target>

<target name="release" depends="clean-test, release-dist, release-sign"/>

<target name="sha">
  <property name="sha.exec" value="shasum"/>
  <property name="sha.options" value=""/>
  <exec executable="${sha.exec}" output="${sign.archive}.sha">
    <arg line="${sha.options} ${sign.archive}"/>
  </exec>
</target>

<target name="sign-file">
  <property name="gpg.exec" value="gpg"/>
  <property name="gpg.options" value="--armor --detach-sign --force-v3-sigs --batch --verbose --passphrase-fd 0"/>
  <delete file="${sign.archive}.asc"/>
  <exec executable="${gpg.exec}" inputstring="${pwd}">
    <arg line="${gpg.options} ${sign.archive}"/>
  </exec>
</target>

<target name="clean-classes">
  <delete includeemptydirs="true" quiet="true">
    <fileset dir="${classes.dir}"/>
    <fileset dir="${test.classes.dir}"/>
  </delete>
</target>

<target name="clean-resources">
  <delete includeemptydirs="true" quiet="true">
    <fileset dir="${test.resources.dir}"/>
  </delete>
</target>

<target name="clean-artifacts">
  <delete includeemptydirs="true" quiet="true">
    <fileset dir="${artifacts.dir}"/>
  </delete>
</target>

<target name="clean-test-output">
  <delete includeemptydirs="true" quiet="true">
    <fileset dir="${junit.output.dir}"/>
  </delete>
</target>

<target name="clean" depends="clean-classes, clean-resources, clean-artifacts, clean-test-output"/>

<target name="clean-generated">
  <delete includeemptydirs="true">
    <fileset dir="${generated.dir}" includes="**/*"/>
  </delete>
</target>

<target name="clean-all" depends="clean, clean-generated"/>

<target name="clean-build" description="Clean and build TTV" depends="clean,build"/>

<target name="clean-test" description="Clean, build, and test TTV" depends="clean,build,test"/>

<!-- WARNING - THIS TARGET OVERWRITES EXISTING BINDING SOURCES!! -->
<target name="clean-all-test" depends="clean-all,generate-code,build,test"/>

<target name="run-valid" description="Run verifier with valid TTML10 input test files">
  <java jar="${ttv.target}" fork="true" failonerror="true">
    <jvmarg value="-ea"/>
    <arg value="-v"/>
    <arg value="--hide-warnings"/>
    <arg value="--warn-on"/>
    <arg value="all"/>
    <arg value="${test.resources.source.dir}/com/skynav/ttv/app/ttml10-valid-simple.xml"/>
    <arg value="${test.resources.source.dir}/com/skynav/ttv/app/ttml10-valid-all-elements.xml"/>
    <arg value="${test.resources.source.dir}/com/skynav/ttv/app/ttml10-valid-all-metadata.xml"/>
    <arg value="${test.resources.source.dir}/com/skynav/ttv/app/ttml10-valid-all-parameters.xml"/>
    <arg value="${test.resources.source.dir}/com/skynav/ttv/app/ttml10-valid-all-profiles.xml"/>
    <arg value="${test.resources.source.dir}/com/skynav/ttv/app/ttml10-valid-all-styles.xml"/>
    <arg value="${test.resources.source.dir}/com/skynav/ttv/app/ttml10-valid-all-timing.xml"/>
    <arg value="${test.resources.source.dir}/com/skynav/ttv/app/ttml10-valid-agent-idref-duplicate.xml"/>
    <arg value="${test.resources.source.dir}/com/skynav/ttv/app/ttml10-valid-agent-missing-actor.xml"/>
    <arg value="${test.resources.source.dir}/com/skynav/ttv/app/ttml10-valid-agent-missing-name.xml"/>
    <arg value="${test.resources.source.dir}/com/skynav/ttv/app/ttml10-valid-extensions-base-other-namespace.xml"/>
    <arg value="${test.resources.source.dir}/com/skynav/ttv/app/ttml10-valid-extension-non-standard.xml"/>
    <arg value="${test.resources.source.dir}/com/skynav/ttv/app/ttml10-valid-font-family-quoted-generic.xml"/>
    <arg value="${test.resources.source.dir}/com/skynav/ttv/app/ttml10-valid-foreign.xml"/>
    <arg value="${test.resources.source.dir}/com/skynav/ttv/app/ttml10-valid-foreign-metadata.xml"/>
    <arg value="${test.resources.source.dir}/com/skynav/ttv/app/ttml10-valid-opacity-out-of-range.xml"/>
    <arg value="${test.resources.source.dir}/com/skynav/ttv/app/ttml10-valid-origin-negative.xml"/>
    <arg value="${test.resources.source.dir}/com/skynav/ttv/app/ttml10-valid-profile-attribute-ignored.xml"/>
    <arg value="${test.resources.source.dir}/com/skynav/ttv/app/ttml10-valid-profile-attribute-non-standard.xml"/>
    <arg value="${test.resources.source.dir}/com/skynav/ttv/app/ttml10-valid-profile-missing.xml"/>
    <arg value="${test.resources.source.dir}/com/skynav/ttv/app/ttml10-valid-profile-non-standard.xml"/>
    <arg value="${test.resources.source.dir}/com/skynav/ttv/app/ttml10-valid-role-duplicate.xml"/>
    <arg value="${test.resources.source.dir}/com/skynav/ttv/app/ttml10-valid-role-extension.xml"/>
    <arg value="${test.resources.source.dir}/com/skynav/ttv/app/ttml10-valid-style-idref-duplicate-with-intervening.xml"/>
    <arg value="${test.resources.source.dir}/com/skynav/ttv/app/ttml10-valid-style-idref-duplicate-without-intervening.xml"/>
  </java>
</target>

</project>
